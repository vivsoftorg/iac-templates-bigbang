addons:
  gitlab:
    # -- Toggle deployment of Gitlab
    enabled: false
    hostnames:
      # host name only without the domain
      gitlab: gitlab
      registry: registry
    # -- Choose source type of "git" or "helmRepo"
    sourceType: "helmRepo"
    git:
      repo: https://repo1.dso.mil/big-bang/product/packages/gitlab.git
      path: "./chart"
      tag: "9.2.1-bb.1"
    helmRepo:
      repoName: "registry1"
      chartName: "gitlab"
      tag: "9.2.1-bb.1"
    # -- Flux reconciliation overrides specifically for the Gitlab Package
    flux: {}
    # -- Redirect the package ingress to a specific Istio Gateway (listed in `istio.gateways`).  The default is "public".
    ingress:
      gateway: ""
    sso:
      # -- Toggle OIDC SSO for Gitlab on and off.
      # Enabling this option will auto-create any required secrets.
      enabled: false
      # -- Gitlab OIDC client ID
      client_id: ""
      # -- Gitlab OIDC client secret
      client_secret: ""
      # -- Gitlab SSO Scopes, default is ["Gitlab"]
      scopes:
        - Gitlab
      # -- Fill out the groups block below and populate with Keycloak groups according to your desired Gitlab membership requirements. The default groupsAttribute is "groups".
      # Full documentation: https://docs.gitlab.com/ee/administration/auth/oidc.html?tab=Linux+package+%28Omnibus%29#configure-users-based-on-oidc-group-membership
      groups: []
      #   groupsAttribute: ""
      #   requiredGroups: []
      #   externalGroups: []
      #   auditorGroups: []
      #   adminGroups: []
    database:
      # -- Hostname of a pre-existing PostgreSQL database to use for Gitlab.
      # Entering connection info will disable the deployment of an internal database and will auto-create any required secrets.
      host: ""
      # -- Port of a pre-existing PostgreSQL database to use for Gitlab.
      port: 5432
      # -- Database name to connect to on host.
      database: "" # example: gitlab
      # -- Username to connect as to external database, the user must have all privileges on the database.
      username: ""
      # -- Database password for the username used to connect to the existing database.
      password: ""
    objectStorage:
      # -- Type of object storage to use for Gitlab, setting to s3 will assume an external, pre-existing object storage is to be used.
      # Entering connection info will enable this option and will auto-create any required secrets
      type: "" # supported types are "s3" or "minio"
      # -- S3 compatible endpoint to use for connection information.
      # examples: "https://s3.amazonaws.com" "https://s3.us-gov-west-1.amazonaws.com" "http://minio.minio.svc.cluster.local:9000"
      endpoint: ""
      # -- S3 compatible service endpoint for use with Minio or aws S3.  See: https://gitlab.com/gitlab-org/charts/gitlab/-/tree/master/examples/objectstorage
      # Setting this allows the registry to use a different endpoint than the global `objectStorage.endpoint` documented above.
      # `objectStorage.endpoint` must be set in order for `objectStorage.regionendpoint` endpoint to be used.  See: https://docs.gitlab.com/administration/object_storage/
      # Also note rails.s3.yaml and registry.s3.yaml here for implementation parallel: https://gitlab.com/gitlab-org/charts/gitlab/-/tree/master/examples/objectstorage
      # examples:  "https://s3.us-gov-west-1.amazonaws.com" "https://minio.example.com:9000"
      regionendpoint: ""
      # -- S3 compatible region to use for connection information.
      region: ""
      # -- Access key for connecting to object storage endpoint.
      # -- If using accessKey and accessSecret, the iamProfile must be left as an empty string: ""
      accessKey: ""
      # -- Secret key for connecting to object storage endpoint.
      # Unencoded string data. This should be placed in the secret values and then encrypted
      accessSecret: ""
      # -- Bucket prefix to use for identifying buckets.
      # Example: "prod" will produce "prod-gitlab-bucket"
      bucketPrefix: ""
      # -- NOTE: Current bug with AWS IAM Profiles and Object Storage where only artifacts are stored. Fixed in Gitlab 14.5
      # -- Name of AWS IAM profile to use.
      # -- If using an AWS IAM profile, the accessKey and accessSecret values must be left as empty strings eg: ""
      iamProfile: ""
    smtp:
      # -- Passwords should be placed in an encrypted file. Example: environment-bb-secret.enc.yaml
      # If a value is provided BigBang will create a k8s secret named gitlab-smtp-password in the gitlab namespace
      password: ""
    redis:
      # -- Redis plain text password to connect to the redis server.  If empty (""), the gitlab charts will create the gitlab-redis-secret
      # with a random password.
      # -- This needs to be set to a non-empty value in order for the Grafana Redis Datasource and Dashboards to be installed.
      password: ""
    # -- Rails plain text secret to define. If empty (""), the gitlab charts will create the gitlab-rails-secret with randomized data.
    # Read the following for more information on setting Gitlab rails secrets: https://docs.gitlab.com/charts/installation/secrets#gitlab-rails-secret
    railsSecret: ""
    # -- Values to passthrough to the gitlab chart: https://repo1.dso.mil/big-bang/product/packages/gitlab.git
    values: {}
    # -- Post Renderers.  See docs/postrenders.md
    postRenderers: []
